[
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // Git
      "space g h d": "editor::ToggleHunkDiff",
      "space g h r": "editor::RevertSelectedHunks",

      // Toggle inlay hints
      "space c i": "editor::ToggleInlayHints",

      // Toggle soft wrap
      "space c w": "editor::ToggleSoftWrap",

      // Toggle zen mode
      "space z": "workspace::ToggleCenteredLayout",

      // Open markdown preview
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",

      // Open recent projects
      "space f p": "projects::OpenRecent",

      // Search word under cursor
      "space s w": "pane::DeploySearch",

      // Chat with AI
      "space a c": "assistant::ToggleFocus",

      // Go to file
      "g f": "editor::OpenExcerpts"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // put key-bindings here if you want them to work only in normal mode
      // Window movement bindings
      // Ctrl jklk to move between panes
      "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"],
      "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],

      // LSP
      "space c a": "editor::ToggleCodeActions",
      "space c r": "editor::Rename",
      "g d": "editor::GoToDefinition",
      "g D": "editor::GoToDefinitionSplit",
      "g i": "editor::GoToImplementation",
      "g I": "editor::GoToImplementationSplit",
      "g t": "editor::GoToTypeDefinition",
      "g T": "editor::GoToTypeDefinitionSplit",
      "g r": "editor::FindAllReferences",
      "] d": "editor::GoToDiagnostic",
      "[ d": "editor::GoToPrevDiagnostic",

      // Symbols search
      "space s s": "outline::Toggle",
      "space s S": "project_symbols::Toggle",

      // Diagnostics
      "space x x": "diagnostics::Deploy",

      // Git
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPrevHunk",

      // Switch between buffers
      "shift-l": "pane::ActivateNextItem",
      "shift-h": "pane::ActivatePrevItem",

      // Close active buffer
      "space q": "pane::CloseActiveItem",

      // Save files
      "ctrl-s": "workspace::Save",

      // File finder
      "space f f": "file_finder::Toggle",
      "space space": "file_finder::Toggle",
      "alt-f": "file_finder::Toggle",

      // Show project panel
      "space e": "pane::RevealInProjectPanel",
      "alt-e": "project_panel::ToggleFocus"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Open file finder
      "space space": "file_finder::Toggle",
      // Open recent project
      "space f p": "projects::OpenRecent",
      // Open project panel
      "space e": "workspace::ToggleRightDock"
    }
  },
  // Comment code
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "g c": "editor::ToggleComments"
    }
  },
  // Rename
  {
    "context": "Editor && vim_operator == c",
    "bindings": {
      "c": "vim::CurrentLine",
      "r": "editor::Rename" // zed specific
    }
  },
  // Code Action
  {
    "context": "Editor && vim_operator == c",
    "bindings": {
      "c": "vim::CurrentLine",
      "a": "editor::ToggleCodeActions" // zed specific
    }
  },
  // File panel (netrw)
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "A": "project_panel::NewDirectory",
      "r": "project_panel::Rename",
      "d": "project_panel::Delete",
      "x": "project_panel::Cut",
      "c": "project_panel::Copy",
      "p": "project_panel::Paste",
      // Close project panel as project file panel on the right
      "q": "workspace::ToggleRightDock"
    }
  },
  // Panel nagivation
  {
    "context": "Dock",
    "bindings": {
      "ctrl-w h": ["workspace::ActivatePaneInDirection", "Left"],
      "ctrl-w l": ["workspace::ActivatePaneInDirection", "Right"],
      "ctrl-w k": ["workspace::ActivatePaneInDirection", "Up"],
      "ctrl-w j": ["workspace::ActivatePaneInDirection", "Down"]
    }
  },
  {
    "context": "Workspace",
    "bindings": {
      // Map VSCode like keybindings
      "alt-h": "workspace::ToggleLeftDock",
      "alt-l": "workspace::ToggleRightDock",
      "alt-t": "terminal_panel::ToggleFocus",
      "alt-j": "workspace::ToggleBottomDock",
      "alt-f": "file_finder::Toggle",
      "alt-e": "project_panel::ToggleFocus",
      "alt-p": "projects::OpenRecent"
    }
  }
]
